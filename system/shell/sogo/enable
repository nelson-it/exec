#!/bin/bash

. exec/system/config/allg.sh
. exec/system/shell/allg/file.sh

myscriptdir=$scriptdir

i=`dpkg --get-selections mnesogo | expand | fgrep ' install' | wc -l`
if [ ! "$i" = "1" ]; then
    debconf-set-selections <<< "postfix postfix/mailname string $(hostname)"
    debconf-set-selections <<< "postfix postfix/main_mailer_type string 'Internet Site'"

    apt-get update >&$logfile 2>&1
    apt-get -y install mnesogo >&$logfile 2>&1
    systemctl daemon-reload 
fi

find_script domain/detail  read.sh
find_script apache2/detail read.sh
find_script cert/ca        read.sh

find_template sogoconf sogo/enable sogo.conf
find_template sogosite sogo/enable site.conf

conf=`get_data "$apacheconf"`
apache_conf "$conf"

domainconf=`get_data "$getdomain"`
get_domain "$domainconf"

conf=`get_data "$getcertconf"`
get_certconf "$conf"

# ==================================================================
# Datenbank und Datenbankbenutzer
# ==================================================================
mne_error_ignore=1
psql --user=sogo --host=127.0.0.1 sogo < /dev/null >&$logfile 2>&1

if [ ! "$?" = "0" ]; then
  mne_error_ignore=
  pg_adduser   sogo
  pg_addaccess 'host.*sogo.*sogo.*127.0.0.1'       'host    sogo       sogo           127.0.0.1/32  trust'
  su - postgres -c 'echo "CREATE DATABASE sogo WITH OWNER = sogo TEMPLATE = template0 ENCODING = 'UTF8' TABLESPACE = pg_default  CONNECTION LIMIT = -1;" | psql' >&$logfile 2>&1
fi

mne_error_ignore=

# ==================================================================
# Systembenutzer erzeugen
# ==================================================================
password=$(dd if=/dev/urandom bs=2048 count=1 2>/dev/null |tr -dc "a-zA-Z0-9"|fold -w 64 |head -1)
bindpassword="$password"
user=sogo
. $myscriptdir/../domain/user/add_primary
. $myscriptdir/../domain/user/setpasswd_primary >&$logfile 2>&1

# ==================================================================
# Conf File
# ==================================================================
domainconf=`get_data "$getdomain"`
get_domain "$domainconf"
domaindn=$(echo $domain | sed -e "s/^/dc=/" -e "s/\./,dc=/g")

prog='/####BINDPASSWORD####/ { gsub(/####BINDPASSWORD####/, bindpassword);  }
      /####DOMAIN####/       { gsub(/####DOMAIN####/,domain); }
      /####DOMAINDN####/     { gsub(/####DOMAINDN####/,domaindn); }
                             { print $0 }'

mkdir -p        /var/spool/sogo >&$logfile 2>&1
chown www-data  /var/spool/sogo >&$logfile 2>&1
chmod 700       /var/spool/sogo >&$logfile 2>&1

 save_file /etc/sogo/sogo.conf
 awk "$prog" "bindpassword=$bindpassword" "domain=$domain" "domaindn=$domaindn" < $sogoconf > /etc/sogo/sogo.conf

. $myscriptdir/dovecot/enable
. $myscriptdir/postfix/enable

systemctl restart mne_sogo.service

# ==================================================================
# Apache Configuration
# ==================================================================

prog='/####HTTPPORT####/      { gsub(/####HTTPPORT####/, "'$port'");  }
      /####HTTPSPORT####/     { gsub(/####HTTPSPORT####/,"'$sport'"); }
      /####DATAROOT####/      { gsub(/####DATAROOT####/,"'$DATAROOT'"); }
      /####DOMAIN####/        { gsub(/####DOMAIN####/,"'$domain'"); }
                              { print $0 }'

awk "$prog" $sogosite > $apache2rootdir/sites-available/sogo.conf

if [  ! -e $certkeydir/sogo.key ] ||  [ ! -e $certcertdir/sogo.crt ]; then
    domainsave="$domain"
    aliases="sogo.$domain"
    domain="sogo"
    . exec/system/shell/cert/http/mkcert
    domain="$domainsave"
fi

a2ensite sogo >&$logfile 2>&1
$apache2reload >&$logfile 2>&1


